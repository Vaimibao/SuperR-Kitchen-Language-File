#所有汉化均由曦颜XY独立完成
#修订版本：Beta1.1.0_17.4.16
#如有汉化建议请联系本人微博：曦顏XY
#原作者：SuperR
#XDA链接：https://forum.xda-developers.com/chef-central/android/kitchen-superrs-kitchen-t3202296

# Main Menu
export t_title_main="主菜单"
export t_title_choose="选择项目:"
export t_title_delete="删除项目:"
export t_title_extract="解压选项:"
export t_menu_create="创建新项目"
export t_menu_choose="选择不同项目"
export t_menu_delete="删除一个项目"
export t_menu_extract="解压新ROM"
export t_menu_updates="检查更新"
export t_menu_misc="Misc工具"
export t_menu_boot_recovery="Boot/Recovery工具"
export t_menu_rom_tools="ROM工具菜单"
export t_menu_new="新项目"
export t_menu_quit="退出"
export t_menu_back="返回"

# ROM Tools Menu
export t_menu_deodex="Deodex ROM(合并odex)"
export t_menu_perm_type="改变脚本授权方式"
export t_menu_root="ROOT/取消ROOT"
export t_menu_asserts="插入菜单"
export t_menu_extra_dir="添加/data/app"
export t_menu_rom_debloat="Debloat 菜单"
export t_menu_build_menu="ROM打包菜单"

# Startup
export t_startup_project="当前项目:"
export t_startup_version="安卓版本:"
export t_startup_no_root="厨房不应以ROOT运行"
export t_startup_shell_error="${redb}${yellowt}${bold}SHELL ERROR:$normal\nBash is required to use this kitchen.\nThe kitchen is currently running in $SHELL."
export t_startup_dep_check="检查依赖 ..."
export t_startup_dep_missing="${redb}${yellowt}${bold}缺少依赖文件:$normal\n下面的依赖缺失:$normal"
export t_startup_need_java="${redb}${yellowt}${bold}缺少依赖文件:$normal\n${redt}你至少需要Java 8使用这个厨房.\n\n${bluet}以下建议方案:$normal"
export t_startup_tool_prep="准备工具 ..."
export t_startup_tool_fail="无法建立一个或多个工具."
export t_startup_install_info="安装以下软件包可以有点帮助:"
export t_startup_cygwin_bin="你需要添加以下的cygwin兼容的二进制文件,"
export t_startup_copy_extract="${redt}复制你的ROM到以下目录并选择${bold}选项4$normal ${redt}去解压:$normal"
export t_startup_title_no_projects="${bluet}当前项目:$normal $redb$whitet${bold}这木有项目.$normal"
export t_startup_title_no_rom="安卓版本: ${redt}No ROM"
export t_startup_no_projects="没有项目."
export t_startup_prep_updater_script="准备updater-script ..."
export t_startup_no_rom="木有ROM哟."

# Build
export t_menu_build_zip="创建完整ROM.zip"
export t_menu_sys_img="创建system.img"
export t_menu_sign="签名目录下已有zip"
export t_donate_menu_zipalign="Zipalign apk文件"
export t_donate_menu_custom_id="自定义ro.build.display.id"
export t_menu_custom_zip="自定义压缩菜单"
export t_build_selinux_error="${redt}不支持selinux, 或者厨房找不到.\n 如果你确认你的设备支持selinux,可以从ramdisk中\n将file_contexts文件复制到00_project_files文件\n夹中来使用.\n\n${bluet}现在, 你可以打包一个普通的ROM.$normal"
export t_build_patient="这将要花费一段时间. 请耐心等待..."
export t_build_prep_img="正在准备创建img文件 ..."
export t_build_need_boot_img="本操作需要boot.img文件."
export t_build_check_ziplog="出现错误. 请检查zip.log文件."
export t_build_prep_sys_img="正在创建system.img文件..."
export t_build_img_error="创建image过程中出现错误."
export t_build_no_zip="没有找到可签名的zip包."
export t_build_no_boot_q="您老的ROM木得boot.img.\n还要继续吗?  y/n"
export t_build_cho_zip="选择zip进行签名:"
export t_zipalign_q="打包ROM之前需要zipalign吗?  y/n  "
export t_zipalign="Zipalign中"
export t_zipalign_frame_q="你需要对/framework中的apk执行 zipalign 吗?  y/n  "
export t_zipalign_complete="Zipalign完成"
export t_donate_bdisplay="你想要你的构建显示说什么?"

# Custom zip
export t_title_cho_cust_zip="选择创建自定义zip:"
export t_menu_fap="framework, app, priv-app"
export t_menu_fapl="framework, app, priv-app, lib"
export t_menu_f="framework"
export t_menu_ap="app, priv-app"
export t_menu_l="lib"
export t_menu_m="media"
export t_cust_deldir_q="您希望该zip在刷入之前删除现有目录?  y/n"
export t_cust_meta_prep="准备META-INF directory ..."
export t_cust_no_app_priv="木有app或者priv-app 目录哟"
export t_cust_not_exist="您要压缩的一个或多个目录不存在."
export t_cust_frame_not_exist="木有framework目录"
export t_cust_lib_not_exist="木有lib目录"
export t_cust_media_not_exist="木有media目录"
export t_cust_dir_info="请确保您至少拥有以下其中一项"
export t_cust_file_check="请确保有system,META-INF和boot.img"
export t_cust_prep="准备文件..."
export t_cust_convert_binary_q="您要把updater-script\n转化成update-binary?  y/n  "
export t_cust_convert_binary="转化updater-script成update-binary中..."

# Debloat
export t_menu_debloat="Debloat ROM"
export t_menu_debloat_cust="自定义 Debloat"
export t_menu_debloat_knox="删除三星 Knox"
export t_menu_debloat_restore="还原 Bloat/Kno"
export t_menu_debloat_refresh="刷新 Bloat Status"
export t_bloat_status="确定bloat状态 ..."
export t_bloat_already_debloated="本ROM已经是debloated状态"
export t_bloat_rem="正在删除 bloat ..."
export t_bloat_moved="Bloat 已经被移动到:"
export t_bloat_cust_info="将内容添加到以下文件以使用此功能:"
export t_bloat_knox_not_exist="ROM中没有Knox"
export t_bloat_knox_rem="正在删除 knox ..."
export t_bloat_knox_moved="Knox 已被移动到:"
export t_bloat_no_files_restore="没有需要还原的文件"
export t_bloat_restore="正在还原 bloat ..."
export t_bloat_has_restored="已还原bloat."
export t_bloat_no_restore="没有需要还原的文件."
export t_bloat_q="现在要debloatROM吗?  y/n  "
export t_bloat_knoz_rem_q="要删除Knox吗?  y/n  "
export t_bloat_restore_q="现在要还原bloat吗?  y/n  "
export t_debloated="Debloated"
export t_bloated="Bloated"
export t_bloat_dir_emply="/tools/root/bloat_custom 为空"

# Root
export t_title_cho_root_zip="选择要Root的Zip:"
export t_menu_root_method="选择您要的ROOT方式?"
export t_menu_supersucho="让SuperSU决定"
export t_menu_system_install="安装到System (SYSTEMLESS=false)"
export t_menu_inject="使用注入 sepolicy 修改,并且安装到system"
export t_menu_download_inject="下载/安装inject-sepolicy-addon"
export t_menu_root_unroot="Root/Unroot ROM"
export t_menu_busybox="Busybox 添加/删除"
export t_menu_add_remove_sud="添加/删除 su.d 支持"
export t_root_already="您已经ROOT了."
export t_root_must_add="您必须先添加ROOT."
export t_busybox_already="您已经有Busybox."
export t_root_q="ROM需要ROOT吗?  y/n  "
export t_busybox_q="ROM需要Busybox吗?  y/n  "
export t_root_sud_add_q="ROM需要su.d支持吗?  y/n  "
export t_root_sud_rem_q="ROM需要移除su.d支持吗?  y/n  "

# General
export t_general_remove_q="要删除它?  y/n  "
export t_general_continue_q="确认继续?  y/n  "
export t_general_cont_anyway_q="无论咋地都要继续?  y/n  "
export t_general_extracting="提取"
export t_general_create="已创建"
export t_general_build="正在创建"
export t_pullimg_info="选择设备存储路径以为adb pull创建img文件\n. 选择设备上空间最大的路径\n. 如果您看不到所需的路径，\n请手动选择输入以添加您自己的路径."
export t_pullimg_q="输入以下设备存储路径，然后按ENTER键:"

# Status
export t_none="没有"
export t_enabled="启用"
export t_disabled="禁用"
export t_add_support="添加支持"
export t_yes="是"
export t_no="否"
export t_secure="安全"
export t_insecure="不安全"
export t_no_knox="木有Knox"
export t_knox="Knox不存在"
export t_deodexed="Deodexed"
export t_odexed="Odexed"
export t_rooted="已Root"
export t_no_root="未Root"

# Boot/Recovery Tools
export t_title_boot="Boot/Recovery工具"
export t_title_cho_boot="选择boot或者recovery img"
export t_title_unpack="解包显示更多选项 "
export t_title_current="当前: "
export t_title_bumped="BUMPED: "
export t_menu_pack_boot="打包"
export t_menu_initd="添加/删除 init.d 支持"
export t_menu_insecure="Insecure/Secure boot.img"
export t_menu_dmverity="删除 dm-verity"
export t_menu_forcee="添加/删除 forceencrypt"
export t_menu_unpack="解包"
export t_menu_boot_flashable="构建此img单刷包:"
export t_menu_switch_boot="在之间切换boot/recovery"
export t_boot_dmverity="删除dm-verity ..."
export t_boot_forcee_rem_ask="确认删除forecencrypt?  y/n  "
export t_boot_forcee_add_ask="需要添加forecencrypt?  y/n  "
export t_boot_rem_forcee="删除forceencrypt中 ..."
export t_boot_forsee_rem="forceencrypt已经删除."
export t_boot_add_forcee="添加orceencrypt中 ..."
export t_boot_forcee_add="forceencrypt已经添加."
export t_boot_warn="此功能仅适用于boot.img"
export t_boot_initd_pixel="init.d Pixel设备不支持 \n尝试su.d代替 "
export t_boot_initd_add="init.d 支持已经添加"
export t_boot_already_initd="您已经有init.d支持"
export t_boot_initd_rem_q="尝试删除它?  y/n  "
export t_boot_initd_cant="init.d 不能被厨房完全清除."
export t_boot_initd_rem="init.d 已经删除."
export t_boot_insecure="boot.img 现在insecure"
export t_boot_already_insecure="boot.img已经insecure"
export t_boot_secure_ask="需要secure它?  y/n  "
export t_boot_secure="boot.img 现在secure"
export t_boot_repack="重新打包"
export t_boot_repack_problem="这里是一个问题重新打包你的"
export t_boot_no_comp="无法确定压缩方法."
export t_boot_no_ramdisk="木有ramdisk."
export t_boot_packed_d=" 打包."
export t_boot_bump_rename="重命名bumped.img 到"
export t_boot_status="检查状态 ..."
export t_boot_and_ver_problem="无法确定Android版本. 请解压\n您的system, 或添加匹配的build.prop 到\nrom目录，然后重试."
export t_boot_already_dmverity="dm-verity已禁用."
export t_boot_dmverity_rem="dm-verity已被删除."
export t_boot_no_img="木有boot.img 或者recovery.img"
export t_boot_prop_warn="请复制build.prop到项目目录并重试."
export t_boot_prep_build="准备创建 ..."
export t_boot_unpack="解压中"
export t_boot_unpack_problem="解压出现问题"
export t_boot_need_img="你需要一个img来完成这个过程."
export t_boot_unpack_elf="解压kernel.elf ..."

# Misc Tools Menu
export t_title_misc="Misc工具"
export t_menu_plugin="运行插件"
export t_menu_zip_devices="Zip新设备并分享"
export t_menu_language="重置语言"
export t_menu_heapsize="heapsize菜单"
export t_menu_support="支持: 创建zip发送"
export t_menu_binaries="更新二进制文件"
export t_support_create="创建support.zip..."
export t_support_finish="support.zip已在您的项目目录中创建"
export t_heapsize_q="请输入您的heapsize大小（MB）. 它必须小于你的总物理RAM:"
export t_heapsize_choose="你想干什么?"
export t_heapsize_custom="为java添加/更改heapsize"
export t_heapsize_reset="返回默认heapsize检测"
export t_heapsize_error="您必须输入一个数字MB (Ex. 1024)"
export t_heapsize_error2="Heapsize必须等于或小于安装的物理RAM的数量."
export t_physical_ram="物理RAM: "
export t_heapsize_auto="默认"

# Asserts
export t_menu_add_assert="增加或删除机型验证"
export t_menu_asserts_custom="增加自定义验证"
export t_menu_asserts_reset="恢复默认的验证"
export t_asserts_no_assert="没有验证要修改."
export t_asserts_current="${bluet}当前机型验证: "
export t_asserts_enter="$redb$yellowt${bold}警告:$normal\n${redt}机型验证可以判断是否允许刷入ROM. \n如果你允许把一个ROM刷到一个\n错误的机型上, 将会导致严重的问题!. \n我告诉你了哦，别怪我！$normal\n\n请用逗号隔开机型验证. \n当前机型已经在列表中,请确保正确. \n输入完成后,按回车结束.\n\n${greenb}例如:$normal"
export t_asserts_prep="正在生成机型验证 ..."
export t_asserts_type="在下面输入你的自定义验证. 按回车键结束.\n\n${greenb}EXAMPLE:$normal"
export t_asserts_prep_cust="正在生成自定义验证 ..."

# Extra Directory
export t_menu_data="/data/app"
export t_menu_cust_dir="自定义"
export t_menu_cctr="${redt}未启用"
export t_extra_data_added="/data/app 文件夹已添加. 请将第三方app放入:"
export t_extra_already_data="${greent}/data/app 文件夹已存在.\n\n${bluet}项目中的 /data 文件夹保持不动.$normal\n\n要删除吗?  y/n"
export t_extra_data_rem="/data/app支持已删除"
export t_extra_cust_name="键入自定义目录的名称和刷入的位置，然后按ENTER键."
export t_extra_cust_setup="配置"
export t_extra_cust_add="支持已添加"
export t_extra_data="数据perm类型:"
export t_extra_data_q="您要添加/ data / app支持?  y/n  "
export t_extra_data_perm="请选择/ data perm类型: "

# Selection
export t_select="请选择:  "
export t_select_enter="请选择并回车:  "

# Notices
export t_example="例如:"
export t_warning="警告:"
export t_notice="注意:"
export t_missing="缺少文件:"
export t_current="当前"
export t_error="错误:"
export t_error_mess="出现错误."

# Press ENTER
export t_enter_rom_tools="按ENTER返回ROM工具菜单"
export t_enter_continue="按ENTER继续"
export t_enter_main_menu="按ENTER返回主菜单"
export t_enter_boot_menu="按ENTER返回到Boot/Recovery工具菜单"
export t_enter_build_zip_menu="按ENTER返回创建zip菜单"
export t_enter_build_menu="按ENTER返回创建菜单"
export t_enter_change_perm_menu="按ENTER返回改变授权方式菜单"
export t_enter_debloat_menu="按ENTER返回Debloat菜单"
export t_enter_extra_dir_menu="按ENTER返回到其他目录菜单"
export t_enter_cho_another_detection="按ENTER键选择另一种检测方法"
export t_enter_ready="准备就绪时按ENTER键"
export t_enter_kitchen_updater="按ENTER返回厨房更新程序"
export t_enter_misc_tools_menu="按ENTER返回Misc工具菜单"
export t_enter_continue_extracting="按ENTER继续提取"
export t_enter_try_again="按ENTER键重试"
export t_enter_root_menu="按ENTER返回ROOT菜单"
export t_enter_continue_rest="按ENTER继续"
export t_enter_exit="按ENTER键退出"

# AutoROM
export t_donate_autorom_q="您要使用AutoROM?  y/n  "
export t_donate_autorom="配置AutoROM ..."

# Perm Type
export t_perm_title="更改/选择授权菜单"
export t_perm_set_metadata_cur="set_metadata"
export t_perm_set_metadata="set_metadata (KitKat+)"
export t_perm_set_perm="set_perm"
export t_perm_sparse="Sparse dat"
export t_perm_sparse_red="Sparse dat (Lollipop+ but not Pixel)"
export t_perm_raw_img="raw_img"
export t_perm_check_symlinks="检查symlinks ..."
export t_perm_no_symlinks="厨房找不到任何symlinks. ROM将无法正常工作."
export t_perm_set_metadata_error="这个ROM不是KitKat+"
export t_perm_sparse_error="这个ROM不兼容sparse_dat"
export t_perm_changing_perm="改变授权方式 ..."
export t_perm_which="你想使用哪种授权类型?"

# Delete Project
export t_delete_no_project="没有要删除的项目."
export t_delete_has_been="已删除."
export t_delete_q="要删除上面的项目?  y/n  "

# Deodex
export t_deodex_copy_frame_prop="您必须将framework目录和\nbuild.prop从您的ROM里复制"
export t_deodex_no_odex="在这个rom没有odex文件."
export t_deodex_no_boot_oat="在这个ROM没有boot.oat. 它不能deodexed."
export t_deodex_disclaimer="Deodexing ROM可能工作，也可能不工作. \n您可能会收到错误, 它可能无法启动, \n或两者都有可能（我知道的问题）. \n除非你知道如何解决它们,\n请不要提交它. 谢谢 :)"
export t_deodex_use_method="使用哪种deodex方法?"
export t_deodex_oat2dex_ver="使用哪个oat2dex版本?"
export t_deodex_oat2dex_official="官方v0.86"
export t_deodex_oat2dex_latest="最新提交构建源码"
export t_title_cho_smali="选择smali:"
export t_title_cho_baksmali="选择baksmali:"
export t_title_cho_oat2dex="选择oat2dex:"
export t_deodex_need_64_bit="您需要64位Linux才能使用此功能"
export t_deodex_dl_install="正在下载/安装 ..."
export t_deodex_no_api="无法检测Android版本."
export t_deodex_config_arch="配置设备的arch.\n\n提示:\n检查framework文件夹, 里面可以看到另一个文件夹. \n文件夹的名字可能是以下之一\n(ex. arm, arm64, x86).\n\n如果这里有问题, 检查以下问题:\n\n1. 确保输入的arch变量是正确的.\n2. 确保ROM没有deodexed.\n\n输入设备的arch并且按回车继续."
export t_deodex_extract_txt="提取odex文件 ..."
export t_deodex_extract="提取中... "
export t_deodex_move="移动额外的应用程序 ..."
export t_deodex_deop="Deoptimizing boot.oat ..."
export t_deodex_start_app="开始deodexing /system/app ..."
export t_deodex_start_priv="开始deodexing /system/priv-app ..."
export t_deodex_start_frame="开始deodexing /system/framework ..."
export t_deodex_deodexing="Deodexing... "
export t_deodex_fail="失败 ..."
export t_deodex_app_already="已经deodexed ..."
export t_deodex_clean="清理 ..."
export t_deodex_complete="Deodexing完成"
export t_deodex_remain="以下odex文件仍在您的ROM中"
export t_deodex_method="方法:"
export t_deodex_problems="${redt}如果deodexing存在问题，\n你刷入的ROM就有问题.\n仔细看看:$normal"
export t_deodex_try_smali="建议: 尝试smali/baksmali"
export t_deodex_api="API等级: "
export t_deodex_arch="ARCH: "
export t_deodex_arch2="ARCH2: "
export t_deodex_no_frame_odex="没有找到，跳过 ..."
export t_deodex_move_odex="移动odex文件 ..."
export t_deodex_try_anyway="怎搞都去试试?  y/n  "
export t_deodex_dl_q="您要现在下载/安装它?  y/n  "
export t_deodex_continue_q="您要继续deodexing?  y/n  "
export t_deodex_del_frame_q="怎搞都要删除framework odex文件?  y/n  "
export t_deodex_del_meta_inf_q="${bluet}Android Nougat使用APK签名方案v2, \n这可能会导致deodexing时出现问题. 从apk文件中删除META-INF\n应该可以解决这个问题.$normal\n\n您是否要从ROM中的所有apk文件中\n删除META-INF目录?  y/n  "
export t_deodex_del_meta_inf="从apk的删除META-INF..."
export t_deodex_pack_jar="将dex包装到jar文件中..."

# Dependencies
export t_dep_install_q="您要立即安装吗？?  y/n  "
export t_dep_install="安装依赖项 ..."

# Extract
export t_extract_no_project="没有项目可以提取."
export t_extract_title="提取菜单"
export t_extract_no_files_message="1) 首先添加一个zip格式的ROM、tar/boot.img、system.img/boot.img、或\nwin/boot.win,然后选择该选项.\n2) 在已经${redt}${bold}ROOT$normal 的设备或\n在第三方Recovery中提取system、vendor、boot、和recovery."
export t_extract_cho_option="$yellowb${redt}选择提取方式$normal\n\n${bluet}**如果遇到错误,请尝试另一种方式**$normal\n\n1) 手机启动在第三方Recovery (${redt}官方Recovery不可用$normal)\n2) 手机启动在Android系统 (${redt}必须 ROOT$normal)"
export t_extract_plug="** 请连接手机"
export t_extract_detect_part="正在检测分区信息..."
export t_extract_check_space="正在检测剩余空间 ..."
export t_extract_free_space="剩余空间: "
export t_extract_space_error="厨房不能确定你的自由空间.\n这可能是因为位置不存在."
export t_extract_space_info="可用设备可用空间为image:"
export t_extract_pull_error="出错了.可能是没有权限从设备里 \npull 出镜像, 或者是设备里没有足够的空间."
export t_extract_prep="正在准备提取 ..."
export t_extract_zip_fail="这个zip不包含厨房可以\n提取的任何东西."
export t_extract_zip="提取zip ..."
export t_extract_dat="正在提取 system.new.dat, system.transfer.list, 和 boot.img ..."
export t_extract_convert_sys="转换到 "
export t_extract_img_from_zip="正在从zip包中提取镜像 ..."
export t_extract_tar_boot="正在提取 system.ext4.tar.a 和 boot.img ..."
export t_extract_img="正在提取 images ..."
export t_extract_fail="提取过程中出现错误."
export t_extract_tar_md5="提取tar.md5文件 ..."
export t_extract_chunk="提取sparsechunks和boot.img ..."
export t_extract_convert_chunk="转换sparse chunks为system.img ..."
export t_extract_general="提取到"
export t_extract_check_firm="正在检测固件包 ..."
export t_extract_tgz_fail="该tgz文件似乎不是Nexus官方固件."
export t_extract_files="正在提取文件 ..."
export t_extract_md5_fail="在tar.md5文件中没有system.img.ext4"
export t_extract_tar_fail="这个tar文件看起来不是nandroid备份文件"
export t_extract_tar="提取名称"
export t_extract_cache_extract_q="提取${yellowt}cache.img$normal?  y/n  "
export t_extract_cache_include_q="你想包括cache.img在你的rom中的文件?  y/n  "
export t_extract_cache="包括cache.img文件 ..."
export t_extract_extra_extract="要提取 "
export t_extract_extra_q="?  y/n  "
export t_extract_extra_include="您要包含的文件"
export t_extract_extra_include_q=" 在你的rom?  y/n  "
export t_extract_rom_fail="提取您的ROM时出现问题."
export t_extract_cho_part_detect="选择分区检测方法"
export t_extract_adb_shell="通过adb shell设备"
export t_extract_project_dir="项目目录(BETA):"
export t_extract_manual="手动输入"
export t_extract_detect="确定分区大小"
export t_extract_beta="${redt}此功能使用测试版. 它可能无法正常刷入.\n您可能会收到类似以下的错误:\n\n${yellowt}blkdiscard failed: Invalid argument\n\n${redt}您可以将perms更改为set_metadata或set_perm以避免使用此功能$normal"
export t_extract_manual_bytes="输入分区大小（以字节为单位）"
export t_extract_detect_fail="分区大小为空. 请重试."
export t_extract_sparse_convert="检查/转换是否sparse ..."
export t_extract_img_fail="没有"
export t_extract_mount_e="安装中"
export t_extract_copy_e="正在将文件复制到"
export t_extract_moved_old_rom="以下已被移动至:"
export t_extract_q="要提取"
export t_extract_q2="到当前项目?  y/n  "

# by-name
export t_byname_how_to_get_q="你想如何得到你的分区信息?"
export t_menu_byname_detect_boot="检测by-name从boot.img/recovery.img (推荐)"
export t_menu_byname_detect_device="检测by-name从设备"
export t_menu_byname_detect_manual="手动输入by-name"
export t_menu_byname_detect_mmc="检测mmcblk分区从recovery.img"
export t_byname_usb_debug="${bluet}** 在系统设置中在Android设备上启用usb调试\n** 连接你的设备$normal"
export t_byname_usb_debug_root="$redb${yellowt}此操作需要root.$normal\n${redt}您可能需要同意在您的设备上允许root.$normal"
export t_byname_error_device="by-name从设备未检测到.\n尝试检测mmc分区从recovery.img"
export t_byname_error_wrong_device="您检测的设备与项目中的设备不同. 请连接正确的设备，然后重试."
export t_byname_no_boot="请复制boot.img, recovery.img, 或者kernel.elf到\n项目目录，然后重试."
export t_byname_which_img_q="我们应该使用哪个image?"
export t_byname_detect_boot="检测by-name从boot.img ..."
export t_byname_detect_recovery="检测by-name从recovery.img ..."
export t_byname_detect_elf="检测by-name从kernel.elf ..."
export t_byname_no_files="此项操作你需要boot.img, recovery.img, 或者kernel.elf."
export t_byname_boot_fail="by-name未检测到."
export t_byname_try_recovery="尝试检测mmc分区从recovery.img"
export t_byname_detect_manual="请输入您的by-name目录，然后按ENTER键"
export t_byname_no_byname="by-name目录为空."
export t_byname_create_mmc="创建mmc从recovery.img ..."
export t_byname_need_recovery="此项操作你需要recovery.img."
export t_byname_no_mmc="厨房找不到mmc块."
export t_byname_recovery_fail="mmc从recovery.img未检测到."
export t_byname_try_boot="尝试检测by-name分区从boot.img"
export t_byname_manual_info="您将需要手动在updater-script中输入分区信息."

# Signature
export t_sig_info="${bluet}这个问题的答案将显示当zip创建时\n刷入的zip和将被转换为zip的名称，$normal\n\n你的zip的名称是?"
export t_donate_sig_cust="${bluet}这一个将显示在下面的zip名称，\n当刷入时 SuperR's Kitchen创建声明的标准版本.$normal\n\n你的签名是什么?"

# Zip devices
export t_zipdev_info="此选项将压缩您的厨房出现的\n新设备。它将在以下位置创建一个zip:"
export t_zipdev_building="创建设备zip ..."
export t_zipdev_finished="设备zip已经创建完成:"
export t_zipdev_upload="请将其上传到论坛，以便\n新设备可以添加到数据库供其他人使用."
export t_zipdev_no_new="设备目录中没有新设备."

# WSL Warning
export t_wsl_warn="在Windows Subsystem for Linux（WSL）\n中运行时，可能无法挂载/提取映像\n。可能会出现意外的结果"

# Binary install
export t_binary_osbit_installing="正在安装位库..."
export t_binary_osbit_installed="位库已安装"
export t_cygwin_info="因为你不是在本地Linux中运行, 所有的\n速度将会变得死慢. 准备updater-script和\n 创建的symlink是最明显的例子."
export t_binary_cygwin_installing="正在安装 cygwin 库..."
export t_binary_cygwin_installed="cygwin 库已安装"
export t_binary_q="无论如何要安装库吗?  y/n  "
export t_binary_cygwin_q="现在要安装 cygwin 库吗?  y/n  "

# Kitchen updater
export t_update_check_kitchen="检查更新 ..."
export t_update_down="文件服务器必须暂时关闭.\n请稍后再试."
export t_update_update_avail="云端存在新版本"
export t_update_update_cv="当期版本:"
export t_update_update_nv="新版本:"
export t_update_update_now="现在更新"
export t_update_update_view="查看更新日志"
export t_update_changelog="更新日志 (最后3个版本):"
export t_update_updating="更新中 ..."
export t_update_finished="SuperR's Kitchen 已更新"
export t_update_no_git="在您的厨房目录中找不到.git.\n厨房必须git克隆才能使用这个更新程序.\n中国版用户不需要更新，如果想更新，就去SuperR库git最新版，\n然后替换/tools/language/chinese-srk即可"
export t_update_already="SuperR's Kitchen 已经是最新的"
export t_update_check_launcher="检查厨房启动器更新 ..."
export t_update_launcher_avail="${greenb}启动器更新可用$normal"
export t_update_launcher_cv="${bluet}当前版本:"
export t_update_launcher_nv="${bluet}新版本:"
export t_update_launcher_finished="安装程序/启动程序已更新"
export t_update_problem_download="下载更新时出现问题."
export t_update_no_internet="厨房无法检测到互联网连接."
export t_update_fail="更新时出现问题.如果您修改了除项目之外的\n任何厨房文件，您可以恢复更改并重试，或者\n重新git clone厨房."
export t_update_q="你想现在更新吗?  y/n  "
export t_update_auto_q="你想在厨房启动时检查更新?  y/n  "

# New Project
export t_new_q="请输入新项目名称(${yellowt}空格会自动替换为_XXX$normal):"
export t_new_already="已有相同名称的项目"

# Plugin
export t_donate_plugin_cho="选择插件:"
export t_donate_plugin_error="插件脚本必须位于与插件脚本名称相同的目录中."

# Sign
export t_sign_ram_check="检查RAM ..."
export t_sign_no_ram="您老没有足够的RAM签名这个zip."
export t_sign_signing="签名中..."
export t_sign_signed="搞定，签名完成!"
export t_sign_fail="签名中出现错误."
export t_sign_q="要把这个zip签个名吗?  y/n  "
export t_sign_cygwin="Zip签名目前在CYGWIN是不支持的哟！"

# Build img
export t_img_add="添加"
export t_img_flash_fail="无法刷入,因为缺少分区信息"
export t_img_create_dat="创建sparse dat镜像"
export t_img_create_symlinks="创建 symlinks"
export t_img_create_raw="创建中..."
export t_img_fail="${redt}构建image出现错误.\n\n${bluet}请确认\n文件夹大小没有过大.$normal"
export t_img_flash_fail2="无法刷入, 因为缺少分区信息\n请创建一个device文件夹,或着在zip包\n创建之后手动输入分区信息"
export t_img_sparse_q="想创建什么鬼类型的img?"

# Language
export t_title_cho_lang="选择语言:"
export t_reset_language="语言已经被重置. 在厨房下次被打开\n时启用设定"
export t_checking_language="检查语言文件"
export t_lang_added="添加了新的英语语言元素"
export t_lang_translate="确保你翻译一下."
